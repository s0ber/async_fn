/*! async_fn (v0.1.6),
 One-method library for calling asynchronous functions one by one in a queue,
 by Sergey Shishkalov <sergeyshishkalov@gmail.com>
 Wed Jan 11 2017 */
(function(){var n;n={},null==window.modula&&(window.modula={"export":function(t,e){return n[t]=e},require:function(t){var e;if(e=n[t])return e;throw"Module '"+t+"' not found."}})}).call(this),function(){window.AsyncFn=function(){function n(n){this.dfd=new $.Deferred,this.fn=n}return n.prototype.done=function(n){return this.callback=n,this.isCalled?this.callback():void 0},n.prototype.call=function(){return this.isCalled?void 0:this.fn().always(function(n){return function(){return n.isCalled=!0,n.dfd.resolve(),n.callback?n.callback():void 0}}(this))},n.addToCallQueue=function(t){var e;return e=new n(t),null!=this.currentFn?this.currentFn.done(function(){return function(){return e.call()}}(this)):e.call(),this.currentFn=e},n.setImmediate=function(){var n,t,e,r;return t={},r=t,n=Math.random(),e=function(e){var r,i;return r=e.data||"",r.toString()===n.toString()?(t=t.next,i=t.func,delete t.func,i()):void 0},window.addEventListener&&window.postMessage?(window.addEventListener("message",e,!1),function(t){return r=r.next={func:t},window.postMessage(n,"*")}):function(n){return setTimeout(n,0)}}(),n}(),modula["export"]("async_fn",AsyncFn)}.call(this);